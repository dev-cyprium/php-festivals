::selection {
    background: #b9d6f2;
}

::-moz-selection {
  background: #b9d6f2;
}

header ul a::-moz-selection {
  background: black !important;
}

header ul a::selection {
  background: black !important;
}

.bg-wrap {
    background-image: url("/assets/images/sports.png");
}

.p-8rem {
    padding: 8rem;
}

.alert {
    display: block;
    position: fixed;
    width: 40%;
    padding: 2em;
    background: #f9fbb2;
    margin: 0 auto;
    top: 5vh;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.5rem;
    color: rgb(51, 51, 51);
    box-shadow: 2px 2px 10px 1px gray;
    .closebtn {
        position: absolute;
        right: 2rem;
        top: 50%;
        transform: translateY(-50%);
        font-size: 3rem;
        color: rgb(51, 51, 51);
        cursor: pointer;
        &:hover {
            color: crimson;
        }
    }
}

.form-error {
    border: 2px solid crimson !important;
}
.err-tooltip {
        display: block;
        color: crimson;
        font-size: 1.4rem;
}
.col {
    flex: 0 0 25%;
}

.col-2 {
    flex: 1 0 50%;
}

.text-center {
    text-align: center;
}

.big-link {
  font-size: 2rem;
}

.vote-table {
    border-collapse: collapse;
    font-size: 2rem;
    margin-top: 1.5em;
    width: 100%;
    tr, th, td {
        border: 1px solid $primary;
        padding: 2em;
    }
}

$breakpoints: (
    'small': 767px,
    'medium': 992px,
    'large': 1200px
) !default;

@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    @else {
        @warn "Unfortunately, no value could be retreived from `#{$breakpoint}`."
            + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}